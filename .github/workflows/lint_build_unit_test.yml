name: Firmware Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint_and_unit_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
        architecture: 'x64'
    - name: Check code formatting
      shell: bash
      run: |
        git fetch --no-recurse-submodules
        echo "Checking code format"
        sudo apt install clang-format
        REPO_ROOT=`pwd` ./scripts/lint/ci_check_clang_format.sh
    - name: Run unit tests
      shell: bash
      run: |
        cd test
        ./test.sh

  linux_build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
        architecture: 'x64'
    - name: Install Linux deps
      shell: bash
      run: |
        sudo apt install libssl-dev
    - name: Build golioth_basics
      shell: bash
      run: |
        cd examples/linux/golioth_basics
        echo "#define GOLIOTH_PSK_ID \"device@project\"" > credentials.inc
        echo "#define GOLIOTH_PSK \"secret\"" >> credentials.inc
        ./build.sh
    - name: Build certificate_auth
      shell: bash
      run: |
        cd examples/linux/certificate_auth
        ./build.sh

  esp_idf_build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
        architecture: 'x64'
    - name: Build ESP-IDF golioth_basics project
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v4.4.2
        target: esp32
        path: 'examples/esp_idf/golioth_basics'
    - name: Create empty certs/keys required by certificate_auth project
      shell: bash
      run: |
        cd examples/esp_idf/certificate_auth
        mkdir -p main/certs
        cd main
        touch certs/client.key
        touch certs/client.pem
        touch root_ca.pem
    - name: Build ESP-IDF certificate_auth project
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v4.4.2
        target: esp32
        path: 'examples/esp_idf/certificate_auth'
    - name: Build ESP-IDF magtag_demo project
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v4.4.2
        target: esp32
        path: 'examples/esp_idf/magtag_demo'

# TODO - modus_toolbox_build
