name: "HIL: ESP-IDF Integration"

on:
  workflow_dispatch:
    inputs:
      hil_board:
        required: true
        type: string
      idf_target:
        required: true
        type: string
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string
  workflow_call:
    inputs:
      hil_board:
        required: true
        type: string
      idf_target:
        required: true
        type: string
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string

jobs:
  build:
    name: esp-idf-${{ inputs.hil_board }}-build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository and Submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Prep for build
        id: build_prep
        run: |
          echo CONFIG_GOLIOTH_COAP_HOST_URI=\"${{ inputs.coap_gateway_url }}\" \
            >> tests/hil/platform/esp-idf/sdkconfig.defaults

          rm -rf test_binaries
          mkdir test_binaries
          echo test_list=$(ls tests/hil/tests) >> "$GITHUB_OUTPUT"
      - name: Build Test Firmware
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.4.1
          target: ${{ inputs.idf_target }}
          path: 'tests/hil/platform/esp-idf'
          command: |
            for test in ${{ steps.build_prep.outputs.test_list }}; do
              idf.py -DGOLIOTH_HIL_TEST=$test build && \
                mv build/merged.bin ../../../../test_binaries/${test}.bin || \
                EXITCODE=$?
            done
            exit $EXITCODE
      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.hil_board }}-esp-idf
          path: test_binaries/*

  test:
    name: esp-idf-${{ inputs.hil_board }}-test
    needs: build
    runs-on:
      - is_active
      - has_${{ inputs.hil_board }}
    timeout-minutes: 30

    container:
      image: golioth/golioth-hil-base:2df1570
      volumes:
        - /dev:/dev
        - /home/golioth/credentials:/opt/credentials
      options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python dependencies
        run: |
          uv pip install \
            pytest \
            pytest-timeout \
            tests/hil/scripts/pytest-hil \
            git+https://github.com/golioth/python-golioth-tools@v0.7.0
      - name: Power On USB Hub
        run: python3 /opt/golioth-scripts/usb_hub_power.py on
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.hil_board }}-esp-idf
          path: .
      - name: Run test
        shell: bash
        env:
          hil_board: ${{ inputs.hil_board }}
        run: |
          rm -rf summary
          mkdir summary
          rm -rf allure-reports
          source /opt/credentials/runner_env.sh
          PORT_VAR=CI_${hil_board^^}_PORT
          for test in $(ls tests/hil/tests)
          do
            pytest --rootdir . tests/hil/tests/$test                            \
              --board ${{ inputs.hil_board }}_espidf                            \
              --port ${!PORT_VAR}                                               \
              --fw-image ${test}.bin                                            \
              --api-url ${{ inputs.api-url }}                                   \
              --api-key ${{ secrets[inputs.api-key-id] }}                       \
              --wifi-ssid ${{ secrets[format('{0}_WIFI_SSID', runner.name)] }}  \
              --wifi-psk ${{ secrets[format('{0}_WIFI_PSK', runner.name)] }}    \
              --mask-secrets                                                    \
              --timeout=600                                                     \
              --junitxml=summary/hil-espidf-${{ inputs.hil_board }}-${test}.xml \
              --alluredir=allure-reports                                        \
              --allure-platform esp-idf                                         \
              --runner-name ${{ runner.name }}                                  \
              || EXITCODE=$?
          done
          exit $EXITCODE

      - name: Prepare summary
        if: success() || failure()
        shell: bash
        run: |
          if ! command -v sudo; then
            # Self-hosted runner docker images don't have sudo installed
            mkdir -p -m 777 /tmp && apt update && apt install -y xml-twig-tools
          else
            sudo apt install -y xml-twig-tools
          fi

          xml_grep \
            --pretty_print indented \
            --wrap testsuites \
            --descr '' \
            --cond "testsuite" \
            summary/*.xml \
            > combined.xml
          mv combined.xml summary/hil-espidf-${{ inputs.hil_board }}.xml

      - name: Safe upload CI report summary
        uses: ./.github/actions/safe-upload-artifacts
        if: success() || failure()
        with:
          name: ci-summary-hil-espidf-${{ inputs.hil_board }}
          path: summary/hil-espidf-${{ inputs.hil_board }}.xml

      - name: Safe upload Allure reports
        if: success() || failure()
        uses: ./.github/actions/safe-upload-artifacts
        with:
          secrets-json: ${{ toJson(secrets) }}
          name: allure-reports-hil-espidf-${{ inputs.hil_board }}
          path: allure-reports

      - name: Erase flash
        if: always()
        shell: bash
        env:
          hil_board: ${{ inputs.hil_board }}
        run: |
          source /opt/credentials/runner_env.sh
          PORT_VAR=CI_${hil_board^^}_PORT
          esptool.py --port ${!PORT_VAR} erase_flash
      - name: Power Off USB Hub
        if: always()
        run: python3 /opt/golioth-scripts/usb_hub_power.py off
