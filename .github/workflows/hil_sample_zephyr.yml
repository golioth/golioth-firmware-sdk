name: Zephyr Sample Tests

on:
  workflow_call:
    inputs:
      hil_board:
        required: true
        type: string
      west_board:
        required: true
        type: string
      manifest:
        required: true
        type: string
      binary_blob:
        required: false
        type: string
      run_tests:
        required: false
        type: boolean
        default: true
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string

jobs:
  build:
    name: zephyr-${{ inputs.hil_board }}-twister-build
    container: golioth/golioth-zephyr-base:0.16.3-SDK-v0
    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.3
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        path: modules/lib/golioth-firmware-sdk
        submodules: 'recursive'
    - name: Init and update west
      run: |
        mkdir -p .west
        cat <<EOF > .west/config
        [manifest]
        path = modules/lib/golioth-firmware-sdk
        file = ${{ inputs.manifest }}
        EOF

        west update -o=--depth=1 -n

        pip3 install -r zephyr/scripts/requirements-base.txt
        pip3 install -r zephyr/scripts/requirements-build-test.txt
        pip3 install -r zephyr/scripts/requirements-run-test.txt
        # Needed for TF-M
        pip3 install cryptography==41.0.7 pyasn1 pyyaml cbor>=1.0.0 imgtool>=1.9.0 jinja2 click

    - name: Download binary blobs
      if: ${{ inputs.binary_blob }}
      run: |
        west blobs fetch ${{ inputs.binary_blob }}

    - name: Compile Tests
      run: |
        export EXTRA_BUILD_ARGS=-x=CONFIG_GOLIOTH_COAP_HOST_URI=\"${{ inputs.coap_gateway_url }}\"

        zephyr/scripts/twister                                                \
              --platform ${{ inputs.west_board }}                             \
              -T modules/lib/golioth-firmware-sdk/examples/zephyr             \
              --prep-artifacts-for-testing                                    \
              --package-artifacts test_artifacts_${{ inputs.west_board }}.tar \
              $EXTRA_BUILD_ARGS

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test_artifacts_${{ inputs.west_board }}
        path: test_artifacts_${{ inputs.west_board }}.tar

  test:
    name: zephyr-${{ inputs.hil_board }}-twister-run
    if: ${{ inputs.run_tests }}
    needs: build
    runs-on: [ is_active, "has_${{ inputs.hil_board }}" ]

    container:
      image: golioth/golioth-twister-base:50cb4bc
      env:
        ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.3
      volumes:
        - /dev:/dev
        - /home/golioth/credentials:/opt/credentials
      options: --privileged

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          path: modules/lib/golioth-firmware-sdk
      - name: Install go and mcumgr
        run: |
          wget https://go.dev/dl/go1.21.6.linux-arm64.tar.gz
          rm -rf /usr/local/go && tar -C /usr/local -xzf go1.21.6.linux-arm64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          go version
          go install github.com/apache/mynewt-mcumgr-cli/mcumgr@latest
          export PATH=$PATH:$(go env GOPATH)/bin
          chmod +x $(go env GOPATH)/bin/mcumgr
      - name: Init and update west
        run: |
          rm -rf zephyr

          mkdir -p .west
          cat <<EOF > .west/config
          [manifest]
          path = modules/lib/golioth-firmware-sdk
          file = .ci-west-zephyr-twister.yml
          EOF

          pip3 install west

          west update -o=--depth=1 -n

          pip3 install -r zephyr/scripts/requirements-base.txt
          pip3 install -r zephyr/scripts/requirements-build-test.txt
          pip3 install -r zephyr/scripts/requirements-run-test.txt

          pip3 install git+https://github.com/golioth/python-golioth-tools@v0.6.0
      - name: Power Cycle USB Hub
        run: /opt/golioth-scripts/power-cycle-usb-hub.sh
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: test_artifacts_${{ inputs.west_board }}
          path: .
      - name: Extract artifacts
        run: tar -xvf test_artifacts_${{ inputs.west_board }}.tar
      - name: Run test
        shell: bash
        env:
          hil_board: ${{ inputs.hil_board }}
          west_board: ${{ inputs.west_board }}
          GOLIOTH_API_KEY: ${{ secrets[inputs.api-key-id] }}
          GOLIOTH_API_URL: ${{ inputs.api-url }}
          WIFI_SSID: ${{ secrets[format('{0}_WIFI_SSID', runner.name)] }}
          WIFI_PSK: ${{ secrets[format('{0}_WIFI_PSK', runner.name)] }}
        run: |
          source /opt/credentials/runner_env.sh
          export PATH=$PATH:/opt/SEGGER/JLink
          export PATH=$PATH:/usr/local/go/bin
          export PATH=$PATH:$(go env GOPATH)/bin
          PORT_VAR=CI_${hil_board^^}_PORT
          SNR_VAR=CI_${hil_board^^}_SNR
          zephyr/scripts/twister                                    \
                -p ${{ inputs.west_board }}                         \
                -T modules/lib/golioth-firmware-sdk/examples/zephyr \
                --device-testing                                    \
                --device-serial ${!PORT_VAR}                        \
                --test-only                                         \
                --west-flash="--skip-rebuild,--dev-id=${!SNR_VAR}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: twister-run-artifacts-${{ inputs.hil_board }}
          path: |
            reports/*
            twister-out/**/*.log
            twister-out/**/report.xml
