name: Zephyr Hardware-in-the-Loop Tests

on:
  workflow_dispatch:
    inputs:
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string
      platform:
        required: true
        type: string
      west_board:
        required: true
        type: string

  workflow_call:
    inputs:
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string
      platform:
        required: true
        type: string
      west_board:
        required: true
        type: string

jobs:
  matrix:
    runs-on: ubuntu-latest
    name: zephyr-native_sim-matrix-generate

    outputs:
      tests: ${{ steps.output-tests.outputs.tests }}

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Prepare tests matrix
        id: output-tests
        shell: python
        run: |
          import json
          import os
          from pathlib import Path

          tests = [p.name for p in Path('tests/hil/tests').iterdir()]

          with open(os.environ['GITHUB_OUTPUT'], 'a') as github_output:
            print('tests=' + json.dumps(tests), file=github_output)

  build_and_test:
    runs-on: ubuntu-latest
    needs: matrix
    container:
      image: golioth/golioth-zephyr-base:0.16.8-SDK-v0
    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.8
    name: zephyr-${{ inputs.platform }}-${{ matrix.test }}-test-nsim
    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJSON(needs.matrix.outputs.tests) }}
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          path: modules/lib/golioth-firmware-sdk
          submodules: 'recursive'

      - name: Init and update west
        run: |
          mkdir -p .west
          cat <<EOF > .west/config
          [manifest]
          path = modules/lib/golioth-firmware-sdk
          file = .ci-west-zephyr.yml
          EOF

          west update -o=--depth=1 -n
          git config --global user.email user@git-scm.com
          git config --global user.name "Git User"
          west patch

          pip install \
            -r zephyr/scripts/requirements-base.txt \
            -r zephyr/scripts/requirements-build-test.txt \
            -r zephyr/scripts/requirements-run-test.txt \
            pytest \
            pytest-timeout \
            modules/lib/golioth-firmware-sdk/tests/hil/scripts/pytest-hil \
            git+https://github.com/golioth/python-golioth-tools@v0.6.4

      - name: Build test
        run: |
          export EXTRA_BUILD_ARGS=-DCONFIG_GOLIOTH_COAP_HOST_URI=\"${{ inputs.coap_gateway_url }}\"

          rm -rf hil-out
          mkdir -p hil-out

          west build -p -b ${{ inputs.west_board }}                        \
            modules/lib/golioth-firmware-sdk/tests/hil/platform/zephyr     \
            -d hil-out/${{ matrix.test }} -- $EXTRA_BUILD_ARGS             \
            -DGOLIOTH_HIL_TEST=${{ matrix.test }}

      - name: Run test
        run: |
          rm -rf summary
          mkdir summary
          rm -rf allure-reports
          pytest --rootdir .                                                            \
            modules/lib/golioth-firmware-sdk//tests/hil/tests/${{ matrix.test }}        \
            --board native_sim                                                          \
            --fw-image hil-out/${{ matrix.test }}/zephyr/zephyr.exe                     \
            --api-url ${{ inputs.api-url }}                                             \
            --api-key ${{ secrets[inputs.api-key-id] }}                                 \
            --mask-secrets                                                              \
            --timeout=600                                                               \
            --junitxml=summary/hil-zephyr-${{ inputs.platform }}-${{ matrix.test }}.xml \
            --alluredir=allure-reports                                                  \
            --platform=zephyr                                                           \
            --allure-board=${{ inputs.platform }}

      - name: Capture coverage
        run: |
          gcovr -r modules/lib/golioth-firmware-sdk                      \
            --gcov-ignore-parse-errors=negative_hits.warn_once_per_file  \
            --merge-mode-functions=separate                              \
            --json hil-out/${{ matrix.test }}/coverage.json              \
            hil-out/${{ matrix.test }}

      - name: Upload test coverage artifacts
        if: always()
        uses: ./modules/lib/golioth-firmware-sdk/.github/actions/safe-upload-artifacts
        with:
          secrets-json: ${{ toJson(secrets) }}
          name: native-sim-hil-test-coverage-${{ inputs.platform }}-${{ matrix.test }}
          path: |
            hil-out/*/coverage.json

      - name: Safe upload CI report summary
        if: success() || failure()
        uses: ./modules/lib/golioth-firmware-sdk/.github/actions/safe-upload-artifacts
        with:
          name: ci-individual-hil-zephyr-${{ inputs.platform }}-${{ matrix.test }}
          path: summary/*

      - name: Safe upload Allure reports
        if: success() || failure()
        uses: ./modules/lib/golioth-firmware-sdk/.github/actions/safe-upload-artifacts
        with:
          secrets-json: ${{ toJson(secrets) }}
          name: allure-reports-hil-zephyr-${{ inputs.platform }}-${{ matrix.test }}
          path: allure-reports

  hil_test_zephyr_nsim_summary:
    name: zephyr-${{ inputs.platform }}-test-summary
    runs-on: ubuntu-latest
    needs: build_and_test
    if: success() || failure()

    steps:
      - name: Collect JUnit reports
        uses: actions/download-artifact@v4
        with:
          pattern: ci-individual-hil-zephyr-*

      - name: Prepare CI report summary
        if: always()
        run: |
          sudo apt install -y xml-twig-tools

          rm -rf summary
          mkdir summary

          xml_grep --pretty_print indented \
            --wrap testsuites --descr '' \
            --cond "testsuite" \
            ci-individual-hil-zephyr-${{ inputs.platform }}-*/*.xml \
            > hil-zephyr-${{ inputs.platform }}.xml

      - name: Upload CI report summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-summary-hil-zephyr-${{ inputs.platform }}
          path: hil-zephyr-*.xml
