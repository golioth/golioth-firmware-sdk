name: Linux "Hardware-in-the-Loop" Tests

on:
  workflow_dispatch:
    inputs:
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string
  workflow_call:
    inputs:
      api-url:
        required: true
        type: string
      api-key-id:
        required: true
        type: string
      coap_gateway_url:
        required: true
        type: string

jobs:
  hil-matrix:
    name: linux-hil-matrix
    runs-on: ubuntu-latest

    outputs:
      tests: ${{ steps.output-tests.outputs.tests }}

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4

      - name: Prepare tests matrix
        id: output-tests
        shell: python
        run: |
          import json
          import os
          from pathlib import Path

          tests = [p.name for p in Path('tests/hil/tests').iterdir()]

          with open(os.environ['GITHUB_OUTPUT'], 'a') as github_output:
            print('tests=' + json.dumps(tests), file=github_output)

  hil:
    name: linux-hil-tests
    runs-on: ubuntu-latest
    needs: hil-matrix

    strategy:
      fail-fast: false
      matrix:
        test: ${{ fromJSON(needs.hil-matrix.outputs.tests) }}

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        path: .
        submodules: 'recursive'
    - name: Compile
      shell: bash
      run: |
        export EXTRA_BUILD_ARGS=-DCONFIG_GOLIOTH_COAP_HOST_URI=${{ inputs.coap_gateway_url }}

        for test in $(ls tests/hil/tests)
        do
          cmake -B build/$test -S tests/hil/platform/linux $EXTRA_BUILD_ARGS -DGOLIOTH_HIL_TEST=$test
          make -j$(nproc) -C build/$test
        done
    - name: Setup Python dependencies
      run: |
        pip install --upgrade pip
        pip install pytest pytest-timeout
        pip install tests/hil/scripts/pytest-hil
        pip install git+https://github.com/golioth/python-golioth-tools@v0.6.4
    - name: Install Linux dependencies
      run: |
        sudo apt-get install lcov
    - name: Run test
      id: run_test
      shell: bash
      env:
        test: ${{ matrix.test }}
      run: |
        rm -rf summary
        mkdir summary
        rm -rf allure-reports

        pytest --rootdir . tests/hil/tests/$test        \
            --board linux                               \
            --fw-image build/${test}/hil                \
            --api-url ${{ inputs.api-url }}             \
            --api-key ${{ secrets[inputs.api-key-id] }} \
            --mask-secrets                              \
            -rP                                         \
            --timeout=600                               \
            --junitxml=summary/hil-linux-${test}.xml    \
            --alluredir=allure-reports                  \
            --platform linux                            \
            || EXITCODE=$?

    - name: Prepare summary
      if: always()
      shell: bash
      run: |
        if ! command -v sudo; then
          # Self-hosted runner docker images don't have sudo installed
          mkdir -p -m 777 /tmp && apt update && apt install -y xml-twig-tools
        else
          sudo apt install -y xml-twig-tools
        fi

        xml_grep --pretty_print indented --wrap testsuites --descr '' --cond "testsuite" summary/*.xml > combined.xml
        mv combined.xml summary/hil-linux.xml
