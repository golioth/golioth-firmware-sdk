From abcad9ee096fb2c13898dc56d11c729da8ceee46 Mon Sep 17 00:00:00 2001
From: Marcin Niestroj <m.niestroj@emb.dev>
Date: Thu, 22 Feb 2024 15:01:18 +0100
Subject: [PATCH] drivers: net: nsos: add IPv6 support

Add support for IPv6 socket offloading, next to existing IPv4 support.

Signed-off-by: Marcin Niestroj <m.niestroj@emb.dev>
---
 drivers/net/nsos.h         |  3 ++-
 drivers/net/nsos_adapt.c   | 41 ++++++++++++++++++++++++++++++++++++++
 drivers/net/nsos_sockets.c | 39 ++++++++++++++++++++++++++++++++++++
 3 files changed, 82 insertions(+), 1 deletion(-)

diff --git a/drivers/net/nsos.h b/drivers/net/nsos.h
index 3f8f09a6a8d..97f8ec76257 100644
--- a/drivers/net/nsos.h
+++ b/drivers/net/nsos.h
@@ -14,10 +14,12 @@
 /* Protocol families. */
 #define NSOS_MID_PF_UNSPEC       0          /**< Unspecified protocol family.  */
 #define NSOS_MID_PF_INET         1          /**< IP protocol family version 4. */
+#define NSOS_MID_PF_INET6        2          /**< IP protocol family version 6. */
 
 /* Address families. */
 #define NSOS_MID_AF_UNSPEC      NSOS_MID_PF_UNSPEC   /**< Unspecified address family.   */
 #define NSOS_MID_AF_INET        NSOS_MID_PF_INET     /**< IP protocol family version 4. */
+#define NSOS_MID_AF_INET6       NSOS_MID_PF_INET6    /**< IP protocol family version 6. */
 
 /** Protocol numbers from IANA/BSD */
 enum nsos_mid_net_ip_protocol {
@@ -58,7 +60,6 @@ struct nsos_mid_sockaddr_in {
 struct nsos_mid_sockaddr_in6 {
 	uint16_t sin6_family;    /* AF_INET6 */
 	uint16_t sin6_port;      /* Port number */
-	uint32_t sin6_flowinfo;  /* IPv6 flow info */
 	uint8_t  sin6_addr[16];
 	uint32_t sin6_scope_id;  /* Set of interfaces for a scope */
 };
diff --git a/drivers/net/nsos_adapt.c b/drivers/net/nsos_adapt.c
index 4dd193c7759..39b7a5b3cc8 100644
--- a/drivers/net/nsos_adapt.c
+++ b/drivers/net/nsos_adapt.c
@@ -46,6 +46,9 @@ static int socket_family_from_nsos_mid(int family_mid, int *family)
 	case NSOS_MID_AF_INET:
 		*family = AF_INET;
 		break;
+	case NSOS_MID_AF_INET6:
+		*family = AF_INET6;
+		break;
 	default:
 		nsi_print_warning("%s: socket family %d not supported\n", __func__, family_mid);
 		return -NSOS_MID_EAFNOSUPPORT;
@@ -63,6 +66,9 @@ static int socket_family_to_nsos_mid(int family, int *family_mid)
 	case AF_INET:
 		*family_mid = NSOS_MID_AF_INET;
 		break;
+	case AF_INET6:
+		*family_mid = NSOS_MID_AF_INET6;
+		break;
 	default:
 		nsi_print_warning("%s: socket family %d not supported\n", __func__, family);
 		return -NSOS_MID_EAFNOSUPPORT;
@@ -255,6 +261,22 @@ static int sockaddr_from_nsos_mid(struct sockaddr **addr, socklen_t *addrlen,
 
 		return 0;
 	}
+	case NSOS_MID_AF_INET6: {
+		const struct nsos_mid_sockaddr_in6 *addr_in_mid =
+			(const struct nsos_mid_sockaddr_in6 *)addr_mid;
+		struct sockaddr_in6 *addr_in = (struct sockaddr_in6 *)*addr;
+
+		addr_in->sin6_family = AF_INET6;
+		addr_in->sin6_port = addr_in_mid->sin6_port;
+		addr_in->sin6_flowinfo = 0;
+		memcpy(addr_in->sin6_addr.s6_addr, addr_in_mid->sin6_addr,
+		       sizeof(addr_in->sin6_addr.s6_addr));
+		addr_in->sin6_scope_id = addr_in_mid->sin6_scope_id;
+
+		*addrlen = sizeof(*addr_in);
+
+		return 0;
+	}
 	}
 
 	return -NSOS_MID_EINVAL;
@@ -287,6 +309,25 @@ static int sockaddr_to_nsos_mid(const struct sockaddr *addr, socklen_t addrlen,
 
 		return 0;
 	}
+	case AF_INET6: {
+		struct nsos_mid_sockaddr_in6 *addr_in_mid =
+			(struct nsos_mid_sockaddr_in6 *)addr_mid;
+		const struct sockaddr_in6 *addr_in = (const struct sockaddr_in6 *)addr;
+
+		if (addr_in_mid) {
+			addr_in_mid->sin6_family = NSOS_MID_AF_INET6;
+			addr_in_mid->sin6_port = addr_in->sin6_port;
+			memcpy(addr_in_mid->sin6_addr, addr_in->sin6_addr.s6_addr,
+			       sizeof(addr_in_mid->sin6_addr));
+			addr_in_mid->sin6_scope_id = addr_in->sin6_scope_id;
+		}
+
+		if (addrlen_mid) {
+			*addrlen_mid = sizeof(*addr_in);
+		}
+
+		return 0;
+	}
 	}
 
 	return -NSOS_MID_EINVAL;
diff --git a/drivers/net/nsos_sockets.c b/drivers/net/nsos_sockets.c
index 1ee607be6ee..8ae9e487b59 100644
--- a/drivers/net/nsos_sockets.c
+++ b/drivers/net/nsos_sockets.c
@@ -41,6 +41,9 @@ static int socket_family_to_nsos_mid(int family, int *family_mid)
 	case AF_INET:
 		*family_mid = NSOS_MID_AF_INET;
 		break;
+	case AF_INET6:
+		*family_mid = NSOS_MID_AF_INET6;
+		break;
 	default:
 		return -NSOS_MID_EAFNOSUPPORT;
 	}
@@ -257,6 +260,26 @@ static int sockaddr_to_nsos_mid(const struct sockaddr *addr, socklen_t *addrlen,
 
 		return 0;
 	}
+	case AF_INET6: {
+		const struct sockaddr_in6 *addr_in =
+			(const struct sockaddr_in6 *)addr;
+		struct nsos_mid_sockaddr_in6 *addr_in_mid =
+			(struct nsos_mid_sockaddr_in6 *)*addr_mid;
+
+		if (*addrlen < sizeof(*addr_in)) {
+			return -NSOS_MID_EINVAL;
+		}
+
+		addr_in_mid->sin6_family = NSOS_MID_AF_INET6;
+		addr_in_mid->sin6_port = addr_in->sin6_port;
+		memcpy(addr_in_mid->sin6_addr, addr_in->sin6_addr.s6_addr,
+		       sizeof(addr_in_mid->sin6_addr));
+		addr_in_mid->sin6_scope_id = addr_in->sin6_scope_id;
+
+		*addrlen_mid = sizeof(*addr_in_mid);
+
+		return 0;
+	}
 	}
 
 	return -NSOS_MID_EINVAL;
@@ -284,6 +307,22 @@ static int sockaddr_from_nsos_mid(struct sockaddr *addr, socklen_t *addrlen,
 
 		return 0;
 	}
+	case NSOS_MID_AF_INET6: {
+		const struct nsos_mid_sockaddr_in6 *addr_in_mid =
+			(const struct nsos_mid_sockaddr_in6 *)addr_mid;
+		struct sockaddr_in6 addr_in;
+
+		addr_in.sin6_family = AF_INET6;
+		addr_in.sin6_port = addr_in_mid->sin6_port;
+		memcpy(addr_in.sin6_addr.s6_addr, addr_in_mid->sin6_addr,
+		       sizeof(addr_in.sin6_addr.s6_addr));
+		addr_in.sin6_scope_id = addr_in_mid->sin6_scope_id;
+
+		memcpy(addr, &addr_in, MIN(*addrlen, sizeof(addr_in)));
+		*addrlen = sizeof(addr_in);
+
+		return 0;
+	}
 	}
 
 	return -NSOS_MID_EINVAL;
-- 
2.43.2

