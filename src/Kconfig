#
# Copyright (C) 2022 Golioth, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#

config GOLIOTH_OTA
    bool "Golioth Over-the-Air Update Service"
    help
        Enable the Golioth OTA service to manage the transfer of OTA components between server and
        device. See also: GOLIOTH_FW_UPDATE

if GOLIOTH_OTA

config GOLIOTH_OTA_MAX_PACKAGE_NAME_LEN
    int "Golioth maximum OTA component package name length"
    default 16
    help
        Maximum number of characters in the package name of a single
        OTA component.

config GOLIOTH_OTA_MAX_VERSION_LEN
    int "Golioth maximum OTA component version length"
    default 16
    help
        Maximum number of characters in the version string of a single
        OTA component.

config GOLIOTH_OTA_MAX_NUM_COMPONENTS
    int "Golioth maximum OTA number of components"
    default 1
    help
        Maximum number of components in an OTA manifest.

endif # GOLIOTH_OTA

config GOLIOTH_FW_UPDATE
    bool "Golioth Firmware Update service"
    select GOLIOTH_OTA
    help
        Enable the Golioth Firmware Update service to automatically manage firmware updates
        utilizing functionality of the Golioth OTA service.

if GOLIOTH_FW_UPDATE

config GOLIOTH_FW_UPDATE_PACKAGE_NAME
    string "Package name of the main firmware component"
    default "main"
    help
      The Package Name used by the Golioth Cloud to indicate the binary to use for device firmware
      update. This name must be no more than GOLIOTH_OTA_MAX_PACKAGE_NAME_LEN characters in length.

config GOLIOTH_FW_UPDATE_OBSERVATION_RETRY_MAX_DELAY_S
    int "Golioth maximum delay before retrying firmware OTA manifest observation"
    default 300 # 5 minutes
    help
        Maximum number of seconds to delay between attempts to establish an OTA manifest
        observation.

        When registering an observation for firmware updates fails, a delay will be used with a
        backoff doubling between retry attempts. The delay value will increase until this limit is
        reached.

config GOLIOTH_FW_UPDATE_THREAD_STACK_SIZE
    int "Golioth OTA thread stack size"
    default 4096
    help
        Stack size of thread handling OTA updates.

config GOLIOTH_FW_UPDATE_ROLLBACK_TIMER_S
    int "FW Update rollback timer period"
    default 300
    help
        The time, in seconds, that the firmware update thread will wait for a connection to
        Golioth after the first boot into a new firmware image. If a connection is not established
        within this period, the firmware update module will roll back the firmware to the previous
        version.

endif # GOLIOTH_FW_UPDATE

config GOLIOTH_GATEWAY
    bool "EXPERIMENTAL: Golioth Gateway service"
    help
        Enable the Golioth Gateway service for proxying pouches

config GOLIOTH_LIGHTDB_STATE
    bool "Golioth LightDB State service"
    help
        Enable the Golioth LightDB State service

if GOLIOTH_LIGHTDB_STATE

config GOLIOTH_LIGHTDB_STATE_FLOAT_HELPERS
    bool "Helper functions for working with floats in LightDB State"
    help
        The SDk provides helper functions for getting and setting
        individual values of various types in LightDB State. This enables
        the helper functions for float types.

endif # GOLIOTH_LIGHTDB_STATE

config GOLIOTH_NET_INFO
    bool "Golioth network information"

if GOLIOTH_NET_INFO

config GOLIOTH_NET_INFO_BUFFER_SIZE
    int "Golioth network information buffer size"
    default 2048
    help
        Size of buffer for Golioth network information. It determines how much information
        (like Wi-Fi Access Points) might be provided in the network information.

config GOLIOTH_NET_INFO_CELLULAR
    bool "Golioth network information cellular support"
    help
        Network information construction using cellular network.

config GOLIOTH_NET_INFO_WIFI
    bool "Golioth network information Wi-Fi support"
    help
        Network information construction using Wi-Fi scanning.

endif # GOLIOTH_NET_INFO

config GOLIOTH_STREAM
    bool "Golioth Stream service"
    help
        Enable the Golioth Stream service

config GOLIOTH_RPC
    bool "Golioth RPC service"
    help
        Enable the Golioth RPC service

if GOLIOTH_RPC

config GOLIOTH_RPC_MAX_NUM_METHODS
    int "Maximum number of registered Golioth RPC methods"
    default 8
    help
        Maximum number of Golioth Remote Procedure Call methods that can
        be registered.

config GOLIOTH_RPC_MAX_RESPONSE_LEN
    int "Maximum number of bytes to allocate for RPC response payload"
    default 256
    help
        Maximum number of bytes to allocate for the Golioth remote procedure call response payload.
        This value determines the memory available for the response_detail_map passed to the RPC
        callback.

endif # GOLIOTH_RPC

config GOLIOTH_SETTINGS
    bool "Golioth Settings service"
    help
        Enable the Golioth Settings service

if GOLIOTH_SETTINGS

config GOLIOTH_SETTINGS_MAX_RESPONSE_LEN
    int "Maximum number of bytes to allocate for Settings response payload"
    default 256
    help
        Maximum number of bytes to allocate for the Golioth Settings service response payload. This
        value determines the memory available for the response_detail_map which is used to pass sync
        information like error codes back to the server. If you have a number of settings that are
        not in sync (wrong value, wrong type, out of bounds, etc.), increase this value to resolve
        `golioth_settings: Failed to send a response to server: -12` errors.

config GOLIOTH_MAX_NUM_SETTINGS
    int "Max number of Golioth settings"
    default 16
    help
        Maximum number of Golioth settings which can be registered
        by the application.

endif # GOLIOTH_SETTINGS
